// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wirtualnik.Data;

namespace Wirtualnik.Data.Migrations
{
    [DbContext(typeof(WirtualnikDbContext))]
    [Migration("20210618173710_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Wirtualnik.Data.Models.HardDisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CacheAmount")
                        .HasColumnType("text");

                    b.Property<string>("Capacity")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EAN")
                        .HasColumnType("text");

                    b.Property<string>("Heads")
                        .HasColumnType("text");

                    b.Property<string>("Interface")
                        .HasColumnType("text");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Platters")
                        .HasColumnType("text");

                    b.Property<string>("Rpm")
                        .HasColumnType("text");

                    b.Property<string>("ScoreOverall")
                        .HasColumnType("text");

                    b.Property<string>("Series")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Morele_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Shop_Xkom_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Xkom_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Xkom_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("ShortCode")
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .HasColumnType("text");

                    b.Property<string>("Warranty")
                        .HasColumnType("text");

                    b.Property<string>("Weight")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HardDisks");
                });

            modelBuilder.Entity("Wirtualnik.Data.Models.Mainboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ArgbHeaders")
                        .HasColumnType("text");

                    b.Property<string>("Chipset")
                        .HasColumnType("text");

                    b.Property<string>("DefaultGenSupport")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EAN")
                        .HasColumnType("text");

                    b.Property<string>("EthernetCard")
                        .HasColumnType("text");

                    b.Property<string>("EthernetSpeed")
                        .HasColumnType("text");

                    b.Property<string>("FanHeaders")
                        .HasColumnType("text");

                    b.Property<string>("Format")
                        .HasColumnType("text");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("M2Ports")
                        .HasColumnType("text");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("RamMaxAmount")
                        .HasColumnType("text");

                    b.Property<string>("RamMaxFreq")
                        .HasColumnType("text");

                    b.Property<string>("RamSlots")
                        .HasColumnType("text");

                    b.Property<string>("SataPorts")
                        .HasColumnType("text");

                    b.Property<string>("Series")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Morele_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Shop_Xkom_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Xkom_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Xkom_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("ShortCode")
                        .HasColumnType("text");

                    b.Property<string>("Socket")
                        .HasColumnType("text");

                    b.Property<string>("Soundcard")
                        .HasColumnType("text");

                    b.Property<string>("UpdateGenSupport")
                        .HasColumnType("text");

                    b.Property<string>("VrmDetails")
                        .HasColumnType("text");

                    b.Property<string>("VrmPhases")
                        .HasColumnType("text");

                    b.Property<string>("VrmRating")
                        .HasColumnType("text");

                    b.Property<string>("Warranty")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Mainboards");
                });

            modelBuilder.Entity("Wirtualnik.Data.Models.Memory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EAN")
                        .HasColumnType("text");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerCode")
                        .HasColumnType("text");

                    b.Property<string>("MemAmount")
                        .HasColumnType("text");

                    b.Property<string>("MemPerModule")
                        .HasColumnType("text");

                    b.Property<string>("ModuleHeight")
                        .HasColumnType("text");

                    b.Property<string>("Modules")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("RGB")
                        .HasColumnType("boolean");

                    b.Property<bool>("Radiator")
                        .HasColumnType("boolean");

                    b.Property<string>("Series")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Morele_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Shop_Xkom_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Xkom_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Xkom_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("ShortCode")
                        .HasColumnType("text");

                    b.Property<string>("SpdFreq")
                        .HasColumnType("text");

                    b.Property<string>("SpdVoltage")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("Warranty")
                        .HasColumnType("text");

                    b.Property<string>("XmpFreq")
                        .HasColumnType("text");

                    b.Property<string>("XmpLatency")
                        .HasColumnType("text");

                    b.Property<string>("XmpVoltage")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Memories");
                });

            modelBuilder.Entity("Wirtualnik.Data.Models.Processor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Architecture")
                        .HasColumnType("text");

                    b.Property<string>("BaseFrequency")
                        .HasColumnType("text");

                    b.Property<string>("BoostFrequency")
                        .HasColumnType("text");

                    b.Property<string>("CacheL1")
                        .HasColumnType("text");

                    b.Property<string>("CacheL2")
                        .HasColumnType("text");

                    b.Property<string>("CacheL3")
                        .HasColumnType("text");

                    b.Property<string>("Cooler")
                        .HasColumnType("text");

                    b.Property<string>("Cores")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EAN")
                        .HasColumnType("text");

                    b.Property<string>("IGPU")
                        .HasColumnType("text");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("Lithography")
                        .HasColumnType("text");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerCode")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("RamFreq")
                        .HasColumnType("text");

                    b.Property<string>("Score_CinebenchMulti")
                        .HasColumnType("text");

                    b.Property<string>("Score_CinebenchSingle")
                        .HasColumnType("text");

                    b.Property<string>("Score_DesktopPerf")
                        .HasColumnType("text");

                    b.Property<string>("Score_GamingPerf")
                        .HasColumnType("text");

                    b.Property<string>("Score_ProPerf")
                        .HasColumnType("text");

                    b.Property<string>("Series")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Morele_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Shop_Xkom_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Xkom_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Xkom_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("ShortCode")
                        .HasColumnType("text");

                    b.Property<string>("Socket")
                        .HasColumnType("text");

                    b.Property<string>("SocketGen")
                        .HasColumnType("text");

                    b.Property<string>("TDP")
                        .HasColumnType("text");

                    b.Property<string>("Threads")
                        .HasColumnType("text");

                    b.Property<bool>("Unlocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Warranty")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Processors");
                });

            modelBuilder.Entity("Wirtualnik.Data.Models.SolidStateDrive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Capacity")
                        .HasColumnType("text");

                    b.Property<string>("Controller")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EAN")
                        .HasColumnType("text");

                    b.Property<string>("Interface")
                        .HasColumnType("text");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerCode")
                        .HasColumnType("text");

                    b.Property<string>("MemoryType")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("Radiator")
                        .HasColumnType("boolean");

                    b.Property<string>("RandRead")
                        .HasColumnType("text");

                    b.Property<string>("RandWrite")
                        .HasColumnType("text");

                    b.Property<string>("ScoreOverall")
                        .HasColumnType("text");

                    b.Property<string>("ScoreSustained")
                        .HasColumnType("text");

                    b.Property<string>("SeqRead")
                        .HasColumnType("text");

                    b.Property<string>("SeqWrite")
                        .HasColumnType("text");

                    b.Property<string>("Series")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Morele_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Morele_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("Shop_Xkom_CleanLink")
                        .HasColumnType("text");

                    b.Property<string>("Shop_Xkom_RefLink")
                        .HasColumnType("text");

                    b.Property<bool>("Shop_Xkom_isAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("ShortCode")
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .HasColumnType("text");

                    b.Property<string>("Tbw")
                        .HasColumnType("text");

                    b.Property<string>("Warranty")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SolidStateDrives");
                });
#pragma warning restore 612, 618
        }
    }
}
